#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail
shopt -s nullglob
set -x

zpool='zocker';

function CHECK() {
    [[ "$1" == 'img' ]] && TYPE='image'
    [[ "$1" == 'ps' ]] && TYPE='container'
    [[ "$1" == '' ]] && TYPE='container or image'
    if [[ "$2" == "$1"* ]]; then
        if zfs list -r -t filesystem -H -o name $zpool | grep -qw "$2"; then
	    #if zfs list -t filesystem "$zpool/$2"; then
		    return 0
	    fi
    fi
    echo "No $TYPE named '$2' exists" && exit 1
}

function INIT() {
    if [[ -d "$1" ]]; then
	    uuid="img_$(shuf -i 10000-99999 -n 1)"
	    zfs create "$zpool/$uuid" > /dev/null
	    cp -rf --reflink=auto "$1"/* "/$zpool/$uuid" > /dev/null
        zfs snapshot "$zpool/$uuid@image"
	    echo "Created: $uuid"
    else
	    echo "No directory named '$1' exists"
    fi
}

function RM() {
    CHECK '' "$1"
    zfs destroy -r "$zpool/$1" > /dev/null
    echo "Removed: $1"
}

function IMAGES() {
    echo -e "IMAGE_ID"
    for img in `zfs list -r -t filesystem -H -o name $zpool | grep "^$zpool/img_"`; do
        basename "$img"
    done
}

function PS() {
    echo -e "CONTAINER_ID\t\tCOMMAND"
    for ps in "/$zpool"/ps_*; do
	    ps=$(basename "$ps")
	    echo -e "$ps\t\t$(cat "/$zpool/$ps/$ps.cmd")"
    done
}

function RUN() {
    CHECK 'img' "$1"
    uuid="ps_$(shuf -i 10000-99999 -n 1)"
    ip link add dev veth0_"$uuid" type veth peer name veth1_"$uuid"
    ip link set dev veth0_"$uuid" up
    ip link set veth0_"$uuid" master bridge0
    ip netns add netns_"$uuid"
    ip link set veth1_"$uuid" netns netns_"$uuid"
    ip netns exec netns_"$uuid" ip link set dev lo up
    ip netns exec netns_"$uuid" ip addr add 10.0.0.2/24 dev veth1_"$uuid"
    ip netns exec netns_"$uuid" ip link set dev veth1_"$uuid" up
    ip netns exec netns_"$uuid" ip route add default via 10.0.0.1
    zfs clone "$zpool/$1@image" "$zpool/$uuid" > /dev/null
    mkdir -p  "/$zpool/$uuid"/etc/
    echo 'nameserver 8.8.8.8' > "/$zpool/$uuid"/etc/resolv.conf
    echo "$2" > "/$zpool/$uuid/$uuid.cmd"
    ip netns exec netns_"$uuid" "unshare" -fp --mount-proc "chroot" \
	   "/$zpool/$uuid" /bin/sh -c "/bin/mount -t proc proc /proc && $2" \
	   2>&1 | tee "/$zpool/$uuid/$uuid.log" || true
    ip link del dev veth0_"$uuid"
    ip netns del netns_"$uuid"
}

function LOGS() {
    CHECK 'ps' "$1"
    cat "/$zpool/$1/$1.log"
}

function COMMIT() {
    CHECK 'ps' "$1" && CHECK 'img' "$2" && RM "$2"
    zfs snapshot "$zpool/$1@$2"
    zfs clone "$zpool/$1@$2" "$zpool/$2"
    #btrfs subvolume snapshot "$btrfs_path/$1" "$btrfs_path/$2" > /dev/null
    echo "Created: $2"
}

function HELP() {
    echo -e "Create an image: \n\t./zocker init <image_directory>\n"
    echo -e "List images: \n\t./zocker images\n"
    echo -e "Create a container: \n\t./zocker run <image_id> <command>\n"
    echo -e "List containers: \n\t./zocker ps\n"
    echo -e "View logs from a container: \n\t./zocker logs <container_id>\n"
    echo -e "Delete an image or container: \n\t./zocker rm <image_or_container_id>"
    exit 0
}

[[ -z "${1-}" ]] && HELP
case $1 in
	init) INIT "$2" ;;
	rm)	RM "$2" ;;
	images) IMAGES ;;
	ps) PS ;;
	run)
		IMAGE="$2"
		shift && shift
		RUN "$IMAGE" "$*"
		;;
	logs) LOGS "$2" ;;
	commit) COMMIT "$2" "$3" ;;
	*) HELP ;;
esac
